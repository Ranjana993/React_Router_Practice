{"version":3,"sources":["Component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setinputData","list","localStorage","getItem","JSON","parse","getLocaData","item","setItem","isEditItem","setEditeItem","toggleBtn","setToggleBtn","addItem","map","currEle","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","stringify","className","src","alt","type","placeholder","value","onChange","e","target","onClick","currElement","index","item_todo_edited","find","editItem","upDatedItem","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAgIeA,MAhHf,WACI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAbR,WAChB,IAAMG,EAAOC,aAAaC,QAAQ,cAClC,OAAIF,EACOG,KAAKC,MAAMJ,GAIX,GAMsBK,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAmCV,qBAAnC,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAGMC,EAAU,WACZ,GAAKd,EAEE,GAAIA,GAAaY,EACpBH,EACID,EAAKO,KAAI,SAACC,GACN,OAAIA,EAAQC,KAAOP,EACR,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAExBgB,MAGff,EAAa,IACbU,EAAa,MACbE,GAAa,OAGZ,CACD,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAQ,GAAD,mBAAKD,GAAL,CAAWW,KAClBlB,EAAa,SArBbsB,MAAM,yBAmDd,OAbAC,qBAAU,WACNrB,aAAaM,QAAQ,aAAcJ,KAAKoB,UAAUjB,MACnD,CAACA,IAYA,mCACI,qBAAKkB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,mBAAmBC,IAAI,UAChC,6EAEJ,sBAAKF,UAAU,WAAf,UACI,uBACIG,KAAK,OACLC,YAAY,2CACZJ,UAAU,eACVK,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAOhC,EAAagC,EAAEC,OAAOH,UAGvCnB,EAAY,mBAAGc,UAAU,sBAAsBS,QAASrB,IACpD,mBAAGY,UAAU,qBAAqBS,QAASrB,OAIjD,uBAEN,qBAAKY,UAAU,WAAf,SAEQlB,EAAKO,KAAI,SAACqB,GACN,OACI,sBAAKV,UAAU,WAAf,UACI,6BAAKU,EAAYlB,OACjB,sBAAKQ,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBS,QAAS,kBAvCnE,SAACE,GACd,IAAMC,EAAmB9B,EAAK+B,MAAK,SAACvB,GAChC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAa0B,GACbxB,GAAa,GAiCyE2B,CAASJ,EAAYnB,OACvE,mBAAGS,UAAU,sBAAsBS,QAAS,kBA1DjE,SAACE,GAChB,IAAMI,EAAcjC,EAAKkC,QAAO,SAAC1B,GAC7B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAAQgC,GAsD8EE,CAAWP,EAAYnB,YAJlDmB,EAAYnB,SAW3D,qBAAKS,UAAU,WAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QAzDlE,WACd1B,EAAQ,KAwDQ,SACI,0DC1GbmC,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.681ac8cd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./Style.css\"\r\n\r\n\r\n// Get the data local data\r\nconst getLocaData = () => {\r\n    const list = localStorage.getItem(\"myTodoList\")\r\n    if (list) {\r\n        return JSON.parse(list);\r\n\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction Todo() {\r\n    const [inputData, setinputData] = useState(\"\");\r\n    const [item, setItem] = useState(getLocaData())\r\n    const [isEditItem, setEditeItem] = useState();\r\n    const [toggleBtn, setToggleBtn] = useState(false)\r\n\r\n    // Adding the item \r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert(\"Please fill the data\")\r\n        } else if (inputData && toggleBtn) {\r\n            setItem(\r\n                item.map((currEle) => {\r\n                    if (currEle.id === isEditItem) {\r\n                        return { ...currEle, name: inputData }\r\n                    }\r\n                    return currEle;\r\n                })\r\n            )\r\n            setinputData([])\r\n            setEditeItem(null)\r\n            setToggleBtn(false)\r\n\r\n        }\r\n        else {\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputData,\r\n            }\r\n            setItem([...item, myNewInputData]);\r\n            setinputData(\"\")\r\n        }\r\n    }\r\n    // Deleting the item\r\n    const deleteItem = (index) => {\r\n        const upDatedItem = item.filter((currEle,) => {\r\n            return currEle.id !== index;\r\n        })\r\n        setItem(upDatedItem)\r\n    }\r\n\r\n\r\n    // removing the item \r\n    const removeAll = () => {\r\n        setItem([]);\r\n    }\r\n    // Adding local storage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"myTodoList\", JSON.stringify(item))\r\n    }, [item])\r\n\r\n    // edit the item \r\n    const editItem = (index) => {\r\n        const item_todo_edited = item.find((currEle) => {\r\n            return currEle.id === index;\r\n        })\r\n        setinputData(item_todo_edited.name)\r\n        setEditeItem(index)\r\n        setToggleBtn(true)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./Image/Todo.jpg\" alt=\"bjvsd\" />\r\n                        <figcaption>✌ Add Your List Here ✌</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\" 🐱‍👓Add item \"\r\n                            className=\"form-control\"\r\n                            value={inputData}\r\n                            onChange={(e) => setinputData(e.target.value)} />\r\n\r\n                        {\r\n                            toggleBtn ? <i className=\"far fa-edit add-btn\" onClick={addItem}></i> :\r\n                                <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n                        }\r\n\r\n\r\n                    </div><br />\r\n                    {/* Show item */}\r\n                    <div className=\"showItem\">\r\n                        {\r\n                            item.map((currElement) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={currElement.id}>\r\n                                        <h3>{currElement.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" onClick={() => editItem(currElement.id)}></i>\r\n                                            <i className=\"fa fa-trash add-btn\" onClick={() => deleteItem(currElement.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                    </div>\r\n                    {/* Remove the item */}\r\n                    <div className=\"showItem\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                            <span>\r\n                                CHECK LIST\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.css';\nimport Todo from './Component/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}